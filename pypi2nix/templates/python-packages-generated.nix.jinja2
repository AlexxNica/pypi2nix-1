### DO NOT EDIT BY HAND! this package was auto generated by pypi2nix ####
### For more info go to: https://www.github.com/offlinehacker/pypi2nix

{ pkgs, python, buildPythonPackage, self, overrides }:
  with pkgs.lib;

let
  isPy26 = python.majorVersion == "2.6";
  isPy27 = python.majorVersion == "2.7";
  isPy33 = python.majorVersion == "3.3";
  isPy34 = python.majorVersion == "3.4";
  isPyPy = python.executable == "pypy";

  # Unique python version identifier
  pythonName =
    if isPy26 then "python26" else
    if isPy27 then "python27" else
    if isPy33 then "python33" else
    if isPy34 then "python34" else
    if isPyPy then "pypy" else "";

  fetchurl = pkgs.fetchurl;

  callOverride = pkg: override:
    if (isFunction override) then (override pkg) else override;

  attrByPathAlternatives = alt: default: e:
    if alt==[] then default else
      attrByPath (head alt) (attrByPathAlternatives (drop 1 alt) default e) e;

  overridablePythonPackage = pkg: buildPythonPackage (
    pkg // (callOverride pkg (
      attrByPathAlternatives ([[pkg.basename] [pkg.name]]) {} overrides)
    )
  );

in {}
############### Aliases #####################################################
{% for env, pkgs in resolved_alias.iteritems() %}
// (optionalAttrs (pythonName == "{{ env }}") {
  {% for name, pkg in pkgs.iteritems() %}
  "{{ name }}" = self.by-version."{{ resolved_pkgs[env][pkg.fullname]["name"] }}-{{ resolved_pkgs[env][pkg.fullname]["version"] }}";
  {% if pkg.extra %}{% for extra in pkg.extra %}
  {% if extra[0] != "_" %}by-extra.{{extra}}."{{ name }}" = self.by-version."{{ resolved_pkgs[env][pkg.fullname]["name"] }}-{{ resolved_pkgs[env][pkg.fullname]["version"] }}";{% endif %}{% endfor %}
  {% else %}
  by-extra.default."{{ name }}" = self.by-version."{{ resolved_pkgs[env][pkg.fullname]["name"] }}-{{ resolved_pkgs[env][pkg.fullname]["version"] }}";
  {% endif %}
  {% endfor %}
})
{% endfor %}

############### Packages ####################################################
// {}
{% for env, pkgs in resolved_pkgs.iteritems() %}
// (optionalAttrs (pythonName == "{{ env }}") {
  {% for name, pkg in pkgs.iteritems() %}
  by-version."{{ pkg["name"] }}-{{ pkg["version"] }}" = overridablePythonPackage {
    name = "{{ pkg["name"] }}-{{ pkg["version"] }}";
    basename = "{{ pkg["name"] }}";
    version = "{{ pkg["version"] }}";

    src = fetchurl {
        url = "{{ pkg["src"]["url"].split("#")[0] }}";
        {{ pkg["src"]["algo"] }} = "{{ pkg["src"]["sum"] }}";
    };

    doCheck = {% if pkg["has_tests"] %}true{% else %}false{% endif %};

    buildInputs = [ {% for p in toset(
        pkg["extra"].get("test", []) +
        pkg["extra"].get("tests", []) +
        pkg["extra"].get("testing", []) +
        pkg["extra"].get("_tests_require", []) +
        pkg["extra"].get("_test_suite", []) +
        pkg["extra"].get("_setup_requires", [])
    ) %}self.by-version."{{p}}" {% endfor %}];
    propagatedBuildInputs = [ {% for p in toset(pkg["deps"]) %}self.by-version."{{p}}" {% endfor %}];
  };
  {% endfor %}
})
{% endfor %}
